import Head from 'next/head'
import Link from 'next/link'
import { FC, useEffect, useRef } from 'react'
import { useTheme } from '../context/ThemeContext'

type props = {
  children: JSX.Element | JSX.Element[]
  title?: string
  isHome?: boolean
  bg?: string
  className?: string
}

const Layout: FC<props> = ({
  children,
  title,
  isHome = false,
  bg,
  className,
}) => {
  const { darkThemeEnabled, setTheme } = useTheme()
  const headerRef = useRef<HTMLElement>(null)
  const mainRef = useRef<HTMLElement>(null)

  const handleSetTheme = () => {
    setTheme(darkThemeEnabled ? 'light' : 'dark')
  } // eslint-disable-line

  return (
    <div
      className={`min-h-[100vh] relative ${
        darkThemeEnabled
          ? 'bg-blackish text-whitish'
          : 'bg-lightWhite text-lightBlack'
      }`}
    >
      <Head>
        <title>MyApp{title ? ` - ${title}` : null}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <header
        ref={headerRef}
        className={` ${
          !darkThemeEnabled ? 'shadow-lg' : 'border-b-[1px] border-lightWhite'
        } z-50 relative`}
      >
        <div className="container flex items-center justify-between mx-auto max-h-24">
          <Link
            href={'/'}
            className="inline-block h-16 px-8 py-4 text-3xl transition-all origin-left hover:translate-x-[5px] hover:text-transparent bg-clip-text hover:bg-gradient-to-r from-purple-600 via-pink-600 to-orange-600"
          >
            {`MyApp`}
          </Link>
          <div className="overflow-hidden transition-all origin-right hover:-translate-x-[5px] ">
            <button
              onClick={handleSetTheme}
              className={`inline-block mx-8 my-4 transition-all text-5xl w-16 h-16 hover:text-transparent bg-clip-text ${
                darkThemeEnabled ? '' : 'rotate-[35deg]'
              } ${
                darkThemeEnabled
                  ? 'hover:bg-gradient-to-r from-yellow-600 to-orange-300'
                  : 'hover:bg-yellow-500'
              }`}
            >
              {darkThemeEnabled ? '☀' : '☽'}{' '}
            </button>
          </div>
        </div>
      </header>
      {isHome && (
        <div className="flex items-center justify-center py-[5rem]">
          <h1 className="font-extrabold text-center text-transparent text-7xl bg-clip-text bg-gradient-to-r h-20 from-purple-600 via-pink-600 to-orange-600 hover:scale-[1.01] transition-transform cursor-default duration-500 tracking-[3px]">
            Welcome to MyApp
          </h1>
        </div>
      )}

      <main
        ref={mainRef}
        className={`container mx-auto flex justify-center absolute bottom-0 left-0 right-0 top-[96px]
        ${bg && `bg-${bg}`} ${className}`}
      >
        <div className="w-full">{children}</div>
      </main>
    </div>
  )
}

export default Layout
